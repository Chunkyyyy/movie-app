{"ast":null,"code":"var _jsxFileName = \"/Users/jesse/movie-app/src/Pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport Genres from \"../../components/Genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    fetchMovies(); // eslint-disable-next-line\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"movie\",\n      selectedGenres: selectedGenres,\n      genres: genres,\n      setSelectedGenres: setSelectedGenres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => {\n        return /*#__PURE__*/_jsxDEV(SingleContent, {\n          id: c.id,\n          poster: c.poster_path,\n          title: c.title || c.name,\n          date: c.first_air_date || c.release_date,\n          media_type: \"movie\",\n          vote_average: c.vote_average\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"fd4o9hS9dx44Bi+UQ+VwmDS9aRg=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/jesse/movie-app/src/Pages/Movies/Movies.js"],"names":["axios","useState","useEffect","SingleContent","CustomPagination","Genres","Movies","page","setPage","content","setContent","numOfPages","setNumOfPages","selectedGenres","setSelectedGenres","genres","setGenres","fetchMovies","data","get","process","env","REACT_APP_API_KEY","results","total_pages","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA5C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMgB,WAAW,GAAG,YAAY;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CACpB,uDAAsDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,wFAAuFf,IAAK,EAD5J,CAAvB;AAGAG,IAAAA,UAAU,CAACQ,IAAI,CAACK,OAAN,CAAV;AACAX,IAAAA,aAAa,CAACM,IAAI,CAACM,WAAN,CAAb;AACD,GAND;;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,CAACV,IAAD,CAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,cAAc,EAAEM,cAFlB;AAGE,MAAA,MAAM,EAAEE,MAHV;AAIE,MAAA,iBAAiB,EAAED,iBAJrB;AAKE,MAAA,SAAS,EAAEE,SALb;AAME,MAAA,OAAO,EAAER;AANX;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGC,OAAO,IACNA,OAAO,CAACgB,GAAR,CAAaC,CAAD,IAAO;AACjB,4BACE,QAAC,aAAD;AAEE,UAAA,EAAE,EAAEA,CAAC,CAACC,EAFR;AAGE,UAAA,MAAM,EAAED,CAAC,CAACE,WAHZ;AAIE,UAAA,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;AAKE,UAAA,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YAL9B;AAME,UAAA,UAAU,EAAC,OANb;AAOE,UAAA,YAAY,EAAEN,CAAC,CAACO;AAPlB,WACOP,CAAC,CAACC,EADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAVF,EA0BGhB,UAAU,GAAG,CAAb,iBACC,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEH,OAA3B;AAAoC,MAAA,UAAU,EAAEG;AAAhD;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAnDD;;GAAML,M;;KAAAA,M;AAqDN,eAAeA,MAAf","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport Genres from \"../../components/Genres\";\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const fetchMovies = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`\n    );\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\">Movies</span>\n      <Genres\n        type=\"movie\"\n        selectedGenres={selectedGenres}\n        genres={genres}\n        setSelectedGenres={setSelectedGenres}\n        setGenres={setGenres}\n        setPage={setPage}\n      />\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => {\n            return (\n              <SingleContent\n                key={c.id}\n                id={c.id}\n                poster={c.poster_path}\n                title={c.title || c.name}\n                date={c.first_air_date || c.release_date}\n                media_type=\"movie\"\n                vote_average={c.vote_average}\n              />\n            );\n          })}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}