{"ast":null,"code":"var _jsxFileName = \"/Users/jesse/movie-app/src/Pages/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Button, Tabs, Tab } from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [type, setType] = useState(0);\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [content, setContent] = useState();\n  const [numOfPages, setNumOfPages] = useState();\n  const darkTheme = createTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\"\n      }\n    }\n  });\n\n  const fetchSearch = async () => {\n    await axios.get(`https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          margin: \"15px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            flex: 1\n          },\n          className: \"searchBox\",\n          label: \"Search\",\n          variant: \"filled\",\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            marginLeft: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: type,\n        indicatorColor: \"primary\",\n        textColor: \"primay\",\n        onChange: (event, newType) => {\n          setType(newType);\n          setPage(1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"50%\"\n          },\n          label: \"Search Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"50%\"\n          },\n          label: \"Search TV Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"aAOJ8vZ0xtlHubhk2crJRuKZflE=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jesse/movie-app/src/Pages/Search/Search.js"],"names":["useState","axios","TextField","Button","Tabs","Tab","createTheme","ThemeProvider","SearchIcon","Search","type","setType","page","setPage","searchText","setSearchText","content","setContent","numOfPages","setNumOfPages","darkTheme","palette","primary","main","fetchSearch","get","process","env","REACT_APP_API_KEY","display","margin","flex","e","target","value","marginLeft","event","newType","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Button, Tabs, Tab } from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst Search = () => {\n  const [type, setType] = useState(0);\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [content, setContent] = useState();\n  const [numOfPages, setNumOfPages] = useState();\n  const darkTheme = createTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\",\n      },\n    },\n  });\n\n  const fetchSearch = async () => {\n    await axios.get(\n      `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${\n        process.env.REACT_APP_API_KEY\n      }&language=en-US&query=${searchText}&page=${page}&include_adult=false`\n    );\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div style={{ display: \"flex\", margin: \"15px 0\" }}>\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button variant=\"contained\" style={{ marginLeft: 10 }}>\n            <SearchIcon />\n          </Button>\n        </div>\n        <Tabs\n          value={type}\n          indicatorColor=\"primary\"\n          textColor=\"primay\"\n          onChange={(event, newType) => {\n            setType(newType);\n            setPage(1);\n          }}\n        >\n          <Tab style={{ width: \"50%\" }} label=\"Search Movies\" />\n          <Tab style={{ width: \"50%\" }} label=\"Search TV Series\" />\n        </Tabs>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}