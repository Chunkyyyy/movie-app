{"ast":null,"code":"var _jsxFileName = \"/Users/jesse/movie-app/src/components/Genres.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genres = _ref => {\n  _s();\n\n  let {\n    selectedGenres,\n    setSelectedGenres,\n    genres,\n    setGenres,\n    type,\n    setPage\n  } = _ref;\n\n  const handleAdd = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres.filter(e => e.id !== genre.id));\n    setPage(1);\n  };\n\n  const fetchGenres = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n    setGenres(data.genres);\n  };\n\n  useEffect(() => {\n    fetchGenres(); // eslint-disable-next-line\n\n    return () => {\n      setGenres({}); // eslint-disable-next-line\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"5px 0\"\n    },\n    children: [selectedGenres && selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      label: genre.name,\n      style: {\n        margin: 2\n      },\n      clickable: true,\n      color: \"primary\",\n      size: \"small\"\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)), genres && genres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      label: genre.name,\n      style: {\n        margin: 2\n      },\n      clickable: true,\n      size: \"small\",\n      onClick: () => handleAdd(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Genres, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genres;\nexport default Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/Users/jesse/movie-app/src/components/Genres.js"],"names":["axios","useEffect","Chip","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","handleAdd","genre","filter","e","id","fetchGenres","data","get","process","env","REACT_APP_API_KEY","padding","map","name","margin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,MAAMC,MAAM,GAAG,QAOT;AAAA;;AAAA,MAPU;AACdC,IAAAA,cADc;AAEdC,IAAAA,iBAFc;AAGdC,IAAAA,MAHc;AAIdC,IAAAA,SAJc;AAKdC,IAAAA,IALc;AAMdC,IAAAA;AANc,GAOV;;AACJ,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3BN,IAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBO,KAApB,CAAD,CAAjB;AACAJ,IAAAA,SAAS,CAACD,MAAM,CAACM,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,KAAK,CAACG,EAApC,CAAD,CAAT;AACAL,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAJD;;AAMA,QAAMM,WAAW,GAAG,YAAY;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,GAAN,CACpB,sCAAqCT,IAAK,iBAAgBU,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBADpE,CAAvB;AAGAb,IAAAA,SAAS,CAACS,IAAI,CAACV,MAAN,CAAT;AACD,GALD;;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW,GADG,CAEd;;AACA,WAAO,MAAM;AACXR,MAAAA,SAAS,CAAC,EAAD,CAAT,CADW,CAEX;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,eACGjB,cAAc,IACbA,cAAc,CAACkB,GAAf,CAAoBX,KAAD,iBACjB,QAAC,IAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACY,IADf;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,KAAK,EAAC,SALR;AAME,MAAA,IAAI,EAAC;AANP,OAEOb,KAAK,CAACG,EAFb;AAAA;AAAA;AAAA;AAAA,YADF,CAFJ,EAYGR,MAAM,IACLA,MAAM,CAACgB,GAAP,CAAYX,KAAD,iBACT,QAAC,IAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACY,IADf;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,OAAO,EAAE,MAAMd,SAAS,CAACC,KAAD;AAN1B,OAEOA,KAAK,CAACG,EAFb;AAAA;AAAA;AAAA;AAAA,YADF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvDD;;GAAMX,M;;KAAAA,M;AAyDN,eAAeA,MAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst Genres = ({\n  selectedGenres,\n  setSelectedGenres,\n  genres,\n  setGenres,\n  type,\n  setPage,\n}) => {\n  const handleAdd = (genre) => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres.filter((e) => e.id !== genre.id));\n    setPage(1);\n  };\n\n  const fetchGenres = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n    );\n    setGenres(data.genres);\n  };\n  useEffect(() => {\n    fetchGenres();\n    // eslint-disable-next-line\n    return () => {\n      setGenres({});\n      // eslint-disable-next-line\n    };\n  }, []);\n\n  return (\n    <div style={{ padding: \"5px 0\" }}>\n      {selectedGenres &&\n        selectedGenres.map((genre) => (\n          <Chip\n            label={genre.name}\n            key={genre.id}\n            style={{ margin: 2 }}\n            clickable\n            color=\"primary\"\n            size=\"small\"\n          />\n        ))}\n      {genres &&\n        genres.map((genre) => (\n          <Chip\n            label={genre.name}\n            key={genre.id}\n            style={{ margin: 2 }}\n            clickable\n            size=\"small\"\n            onClick={() => handleAdd(genre)}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default Genres;\n"]},"metadata":{},"sourceType":"module"}